syntax = "proto3";

package stratosmesh.analytics;

import "google/protobuf/timestamp.proto";
import "google/protobuf/struct.proto";

// Enhanced Stream Service (replaces DataStreamService for universal support)
service EnhancedStreamService {
  rpc ProcessRealTimeStream(stream StreamDataRequest) returns (stream AnalysisResponse);
  rpc ProcessLLMData(LLMDataRequest) returns (LLMDataResponse);
  rpc GetTenantMetrics(TenantMetricsRequest) returns (TenantMetricsResponse);
  rpc ExecuteStrategy(StrategyRequest) returns (StrategyResponse);
}

// LLM Processor Service
service LLMProcessorService {
  rpc ProcessUniversalData(UniversalDataRequest) returns (ProcessedDataResponse);
  rpc AnalyzeDataFormat(DataFormatRequest) returns (DataFormatResponse);
}

// ADD THIS: Strategy Engine Service
service StrategyEngineService {
  rpc GetStrategyResult(StrategyResultRequest) returns (StrategyResultResponse);
  rpc ListStrategies(ListStrategiesRequest) returns (ListStrategiesResponse);
  rpc ValidateStrategy(ValidateStrategyRequest) returns (ValidateStrategyResponse);
  rpc ExecuteStrategy(StrategyExecutionRequest) returns (StrategyExecutionResponse);
}

service AuthService {
  rpc Authenticate(AuthRequest) returns (AuthResponse);
  rpc ValidateToken(TokenValidationRequest) returns (TokenValidationResponse);
  rpc RefreshToken(RefreshTokenRequest) returns (RefreshTokenResponse);
}

service TenantService {
  rpc CreateTenant(CreateTenantRequest) returns (TenantResponse);
  rpc GetTenantConfig(TenantConfigRequest) returns (TenantConfigResponse);
  rpc UpdateTenantLimits(UpdateLimitsRequest) returns (TenantResponse);
}

// Core Messages - Updated for Universal Support
message StreamDataRequest {
  string tenant_id = 1;
  string stream_id = 2;
  string data_type = 3;  // Changed from enum to flexible string
  google.protobuf.Struct payload = 4;
  google.protobuf.Timestamp timestamp = 5;
  map<string, string> metadata = 6;
}

message AnalysisResponse {
  string tenant_id = 1;
  string stream_id = 2;
  string strategy_id = 3;
  AnalysisResult result = 4;
  google.protobuf.Timestamp processed_at = 5;
  repeated Alert alerts = 6;
}

message AnalysisResult {
  string result_id = 1;
  ResultType type = 2;
  google.protobuf.Struct data = 3;
  double confidence = 4;
  map<string, double> metrics = 5;
}

message Alert {
  string alert_id = 1;
  AlertLevel level = 2;
  string message = 3;
  google.protobuf.Struct context = 4;
}

// Universal Data Processing Messages
message UniversalDataRequest {
  string tenant_id = 1;
  string stream_id = 2;
  oneof input_data {
    string raw_text = 3;
    bytes file_data = 4;
    string file_url = 5;
    google.protobuf.Struct structured_data = 6;
  }
  string data_description = 7;
  string desired_format = 8;
  map<string, string> metadata = 9;
}

message ProcessedDataResponse {
  bool success = 1;
  string detected_type = 2;
  repeated ProcessedRecord records = 3;
  DataSchema schema = 4;
  double confidence = 5;
  repeated string processing_steps = 6;
}

message ProcessedRecord {
  google.protobuf.Timestamp timestamp = 1;
  google.protobuf.Struct payload = 2;
  map<string, string> metadata = 3;
}

message LLMDataRequest {
  string tenant_id = 1;
  string stream_id = 2;
  ProcessedDataResponse processed_data = 3;
  string original_format = 4;
}

message LLMDataResponse {
  bool success = 1;
  int32 records_processed = 2;
  string detected_type = 3;
  double confidence = 4;
  repeated ProcessingResult results = 5;
}

message DataFormatRequest {
  string tenant_id = 1;
  oneof input_sample {
    string text_sample = 2;
    bytes file_sample = 3;
  }
  string filename = 4;
  string mime_type = 5;
}

message DataFormatResponse {
  bool success = 1;
  string detected_format = 2;
  string data_type = 3;
  double confidence = 4;
  DataSchema suggested_schema = 5;
  repeated string extraction_methods = 6;
}

message DataSchema {
  string timestamp_field = 1;
  repeated string value_fields = 2;
  repeated string category_fields = 3;
  map<string, string> field_types = 4;
  repeated string required_fields = 5;
}

message ProcessingResult {
  string record_id = 1;
  google.protobuf.Timestamp processed_at = 2;
  bool success = 3;
  string error_message = 4;
  map<string, string> metadata = 5;
}

// Strategy Messages
message StrategyRequest {
  string tenant_id = 1;
  string strategy_id = 2;
  StrategyConfig config = 3;
  repeated StreamDataRequest historical_data = 4;
}

message StrategyResponse {
  string execution_id = 1;
  ExecutionStatus status = 2;
  AnalysisResult result = 3;
  repeated string errors = 4;
}

// ADD THESE: Strategy Engine Messages
message StrategyResultRequest {
  string execution_id = 1;
  string tenant_id = 2;
}

message StrategyResultResponse {
  string execution_id = 1;
  ExecutionStatus status = 2;
  AnalysisResult result = 3;
  repeated string errors = 4;
  google.protobuf.Timestamp created_at = 5;
  google.protobuf.Timestamp completed_at = 6;
}

message ListStrategiesRequest {
  string tenant_id = 1;
  bool include_disabled = 2;
}

message ListStrategiesResponse {
  repeated StrategyInfo strategies = 1;
}

message StrategyInfo {
  string id = 1;
  string name = 2;
  string version = 3;
  string description = 4;
  repeated string required_data_types = 5;
  google.protobuf.Struct default_config = 6;
  bool enabled = 7;
}

message ValidateStrategyRequest {
  string tenant_id = 1;
  string strategy_id = 2;
  StrategyConfig config = 3;
}

message ValidateStrategyResponse {
  bool valid = 1;
  repeated string errors = 2;
  repeated string warnings = 3;
}

message StrategyExecutionRequest {
  string tenant_id = 1;
  string strategy_id = 2;
  StrategyConfig config = 3;
  repeated google.protobuf.Struct data = 4;
  map<string, string> options = 5;
}

message StrategyExecutionResponse {
  string execution_id = 1;
  ExecutionStatus status = 2;
  string message = 3;
  google.protobuf.Timestamp started_at = 4;
}

message StrategyConfig {
  string name = 1;
  string version = 2;
  google.protobuf.Struct parameters = 3;
  repeated string required_data_types = 4;
}

// Tenant Messages
message TenantMetricsRequest {
  string tenant_id = 1;
  google.protobuf.Timestamp start_time = 2;
  google.protobuf.Timestamp end_time = 3;
  repeated string metric_types = 4;
}

message TenantMetricsResponse {
  string tenant_id = 1;
  map<string, MetricValue> metrics = 2;
  TenantUsage usage = 3;
}

message MetricValue {
  double value = 1;
  string unit = 2;
  google.protobuf.Timestamp timestamp = 3;
}

message TenantUsage {
  int64 streams_processed = 1;
  int64 strategies_executed = 2;
  double cpu_usage = 3;
  double memory_usage = 4;
  int64 storage_used = 5;
}

// Auth Messages
message AuthRequest {
  string tenant_id = 1;
  string client_id = 2;
  string client_secret = 3;
  repeated string scopes = 4;
}

message AuthResponse {
  string access_token = 1;
  string refresh_token = 2;
  int64 expires_in = 3;
  string token_type = 4;
}

message TokenValidationRequest {
  string token = 1;
  repeated string required_scopes = 2;
}

message TokenValidationResponse {
  bool valid = 1;
  string tenant_id = 2;
  repeated string scopes = 3;
  google.protobuf.Timestamp expires_at = 4;
}

message RefreshTokenRequest {
  string refresh_token = 1;
  string tenant_id = 2;
}

message RefreshTokenResponse {
  string access_token = 1;
  string refresh_token = 2;
  int64 expires_in = 3;
  string token_type = 4;
}

// Tenant Management Messages
message CreateTenantRequest {
  string name = 1;
  string email = 2;
  TenantLimits limits = 3;
  repeated string allowed_strategies = 4;
}

message TenantResponse {
  string tenant_id = 1;
  string name = 2;
  TenantStatus status = 3;
  TenantLimits limits = 4;
  google.protobuf.Timestamp created_at = 5;
  ClientCredentials client_credentials = 6; // Added for initial setup
}

message ClientCredentials {
  string client_id = 1;
  string client_secret = 2;
}

message TenantConfigRequest {
  string tenant_id = 1;
}

message TenantConfigResponse {
  string tenant_id = 1;
  TenantConfig config = 2;
  google.protobuf.Timestamp updated_at = 3;
}

message TenantConfig {
  TenantLimits limits = 1;
  repeated string allowed_strategies = 2;
  repeated string enabled_strategies = 3;
  map<string, google.protobuf.Struct> strategy_configs = 4;
  map<string, string> settings = 5;
}

message UpdateLimitsRequest {
  string tenant_id = 1;
  TenantLimits limits = 2;
  string reason = 3;
  string updated_by = 4;
}

message TenantLimits {
  int32 max_concurrent_streams = 1;
  int32 max_strategies_per_hour = 2;
  int64 max_storage_mb = 3;
  int32 rate_limit_per_minute = 4;
}

// Enums - Updated for flexibility
enum ResultType {
  PREDICTION = 0;
  ANOMALY = 1;
  RECOMMENDATION = 2;
  CLASSIFICATION = 3;
  AGGREGATION = 4;
  INSIGHT = 5;        // Added for LLM insights
  TRANSFORMATION = 6; // Added for data transformation results
}

enum AlertLevel {
  INFO = 0;
  WARNING = 1;
  ERROR = 2;
  CRITICAL = 3;
}

enum ExecutionStatus {
  PENDING = 0;
  RUNNING = 1;
  COMPLETED = 2;
  FAILED = 3;
  CANCELLED = 4;
}

enum TenantStatus {
  ACTIVE = 0;
  SUSPENDED = 1;
  INACTIVE = 2;
}